services:
  ml_api:
    build:
      context: .
    ports:
      - "${ML_PORT}:${ML_CONTAINER_PORT}"
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/ml_api
    networks:
      - my_bridge_network
    entrypoint: /ml_api/entrypoint.sh
    restart: unless-stopped

  postgres:
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_NAME}
    volumes:
      - ml-db-data:/var/lib/postgresql/data
    networks:
      - my_bridge_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      retries: 5
      timeout: 5s
    restart: unless-stopped

  redis:
    image: redis:latest
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:${REDIS_CONTAINER_PORT}"
    networks:
      - my_bridge_network
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

volumes:
  ml-db-data:
    driver: local

networks:
  my_bridge_network:
    driver: bridge
    external: true
